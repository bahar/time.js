h1. JS-Time

A framework agnostic Javascript utility class, performing time calculations. Piggybacks on <code>Date</code>, adding a bunch of utility functions.

The test suite runs successfully on IE6-IE8, Safari 3 and 4, Firefox 3 and Opera 9. Probably more, send me a message if you ran the tests successfully in an unlisted browser.

h1. Features

h2. Creating new time instances

Use regular Javascript constructors to create new <code>Time</code> instances.

<pre><code>new Time();
new Time(208, 5, 17);
new Time().epoch(1244405763000) // Remember: JS uses milliseconds, not seconds</code></pre>

h2. Getting and setting time attributes

You can set the following attributes:

* <code>year</code>
* <code>month</code>
* <code>hour</code>
* <code>minute</code>
* <code>second</code>
* <code>millisecond</code>
* <code>epoch</code> (UNIX time in milliseconds)

Here's the syntax.

<pre><code>var time = new Time();
time.hour();
time.hour(17);</code></pre>

h2. Time-stepping

JS-Time provides the following time-stepping functions:

* <code>beginningOf</code>/<code>endOF</code>
** <code>year</code>
** <code>month</code>
** <code>day</code>
** <code>hour</code>
** <code>minute</code>
** <code>week</code>
<code>previousMonth</code>
* <code>nextMonth</code>
* <code>advanceMonths</code>
* <code>advanceDays</code>

Some usage examples.

<pre><code>new Time(2008, 5, 17).beginningOfYear();              // January 1st 2008, 00:00
new Time(2008, 5, 17, 23, 52).beginningOfDay();       // May 5th 2008, 00:00
new Time(2008, 5, 17, 16, 30).endOfHour()             // May 5th 2008, 16:59
new Time(2008, 5, 17).endOfYear()                     // December 31th 2008, 23:59
new Time(2008, 1).previousMonth();                    // December 1th 2007, 00:00
new Time(2007, 1, 31).advanceMonths(1)                // February 28th 2007
new Time(2008, 1, 31).advanceMonths(1)                // February 29th 2008
new Time(2008, 1, 3).advanceMonths(-13)               // December 3rd 2006
new Time(2008, 5, 17, 16, 30).advanceDays(1)          // May 18th 2008, 16:30
</code></pre>

Keep in mind that all of these functions mutates the receiver, they do not create new <code>Time</code> instances. If you want to create new instances, use <code>clone</code> (documentation below).

h2. Utility

h3. clone

Clones and returns a copy of the <code>Time</code> instance.

<pre><code>var time = new Time(2006);
var timeClone = time.clone().setYear(1999)
time.year()                                         // 2006
timeClone.year()                                    // 1999
</code></pre>

h3. daysInMonth

Returns, as you might expect, the number of days in the month of that <code>Time</code> instance.

<pre><code>new Time(2008, 1).daysInMonth();                      // 31
new Time(2007, 2).daysInMonth();                    // 28
new Time(2007, 4).daysInMonth();                    // 30</code></pre>

h3. isLeapYear

Returns true or false, depending on wether or not the year in question is a leap year.

<pre><code>new Time(1804).isLeapYear();                          // true</code></pre>

h3. firstDayInCalendarMonth

Useful when rendering month calendar grids. Set the first day of the month with <code>Time.firstDayOfWeek = 2</code>. It defaults to <code>1</code>, which is sunday.

<pre><code>new Time(2008, 1).firstDayInCalendarMonth()          // December 30th 2007
new Time(2008, 4).firstDayInCalendarMonth()         // March 30th 2008
</code></pre>

h3. weeksInMonth

Also useful for calendar, also using <code>Time.firstDayOfWeek</code>.

<pre><code>new Time(2008, 2).weeksInMonth()                     // 5
new Time(2008, 3).weeksInMonth()                    // 6</code></pre>

h1. Installing/using

# Download the JS: "http://github.com/augustl/js-time/raw/master/time.js":http://github.com/augustl/js-time/raw/master/time.js
# Include it on your page
# Have lunch
